<Activity mc:Ignorable="sap sap2010" x:Class="Capital_Call_Data_Extraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="LogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="TempFile" Type="InArgument(x:String)" />
    <x:Property Name="ReadPdfText" Type="InArgument(x:String)" />
    <x:Property Name="DataExtractionStatus" Type="InOutArgument(x:String)" />
    <x:Property Name="refItemRow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="ManagerName" Type="InArgument(x:String)" />
    <x:Property Name="CapitalCallDT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="AltairCode" Type="InArgument(x:String)" />
    <x:Property Name="AdventCode" Type="InArgument(x:String)" />
    <x:Property Name="InvestorIdentifier" Type="InArgument(x:String)" />
  </x:Members>
  <this:Capital_Call_Data_Extraction.LogFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Capital_Call_Data_Extraction.LogFilePath>
  <this:Capital_Call_Data_Extraction.TempFile>
    <InArgument x:TypeArguments="x:String" />
  </this:Capital_Call_Data_Extraction.TempFile>
  <this:Capital_Call_Data_Extraction.ReadPdfText>
    <InArgument x:TypeArguments="x:String" />
  </this:Capital_Call_Data_Extraction.ReadPdfText>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410,1893</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Capital_Call_Data_Extraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Capital_Call_Data_Extraction" sap:VirtualizedContainerService.HintSize="698,1708" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="CapCallAmount" />
      <Variable x:TypeArguments="x:String" Name="CapCallDate" />
      <Variable x:TypeArguments="x:String" Name="CapCallDueDate" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,107.7 570.2416666666667,107.7 570.2416666666667,127.70000000000005</av:PointCollection>
        <x:Double x:Key="Height">1671.2</x:Double>
        <x:Double x:Key="Width">664</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID20</x:Reference>
    </Flowchart.StartNode>
    <FlowDecision x:Name="__ReferenceID3" Condition="[ManagerName.ToLower.Contains(&quot;Twin Bridge&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">530.6416666666667,1387.7</av:Point>
          <av:Size x:Key="ShapeSize">79,87</av:Size>
          <av:PointCollection x:Key="TrueConnector">530.6416666666667,1431.3 340,1431.3 340,1468.4</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">609.8416666666667,1431.3 630.2416666666667,1431.3 630.2416666666667,1497.7 570.2416666666667,1497.7 570.2416666666667,1527.7</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">240,1468.4</av:Point>
              <av:Size x:Key="ShapeSize">200,52</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">240,1494.8000000000002 100,1494.8000000000002 100,1381.2</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Twin Bridge Capital" sap:VirtualizedContainerService.HintSize="534,910" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Twin Bridge Capital" sap:VirtualizedContainerService.HintSize="496,681" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(lp\s*)?amount\s*due\W+(.+)").Groups(2).Value.Trim]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[CapCallDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "date\s*of\s*capital\s*call\W+((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sept|nov|dec)(ember)?)\s*\d{1,2}\W?\s*\d{4}))").Groups(1).Value.Trim]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[CapCallDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(CapCallDate).ToString("M/d/yyyy")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[CapCallDueDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "due\s+date\s+for\s+ach\W+wire\S+\s+((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}\W?\s*\d{4}))").Groups(1).Value.Trim]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[CapCallDueDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(CapCallDueDate).ToString("M/d/yyyy")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_3" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AppendLine>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">0,1328.4</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Adding Data Row" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <TryCatch.Try>
                  <Sequence DisplayName="Adding Values into the Sheet" sap:VirtualizedContainerService.HintSize="572,1232" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:String[]" Name="arrayRow" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[String.IsNullOrEmpty(CapCallDueDate)]" sap:VirtualizedContainerService.HintSize="510,351" sap2010:WorkflowViewState.IdRef="If_11">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,169" sap2010:WorkflowViewState.IdRef="Sequence_35">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_41">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[CapCallDueDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[CapCallDate]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36" />
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="510,81" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[arrayRow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[{ManagerName,AltairCode,AdventCode,InvestorIdentifier,"",CapCallDueDate,CapCallAmount}]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[arrayRow]" DataTable="[CapitalCallDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="510,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                    <Assign sap:VirtualizedContainerService.HintSize="510,81" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[arrayRow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[new String(){}]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Data Extracted for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AppendLine>
                    <Assign sap:VirtualizedContainerService.HintSize="510,81" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[DataExtractionStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Success</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="576,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[DataExtractionStatus]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Failed</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <FlowDecision x:Name="__ReferenceID12" Condition="[ManagerName.ToLower.Contains(&quot;Westminster&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">530.6416666666667,1527.7</av:Point>
              <av:Size x:Key="ShapeSize">79,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">530.6416666666667,1571.3 340,1571.3 340,1608.4</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">240,1608.4</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">240,1634.8000000000002 100,1634.8000000000002 100,1381.2</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Westminster" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                <TryCatch.Try>
                  <Sequence DisplayName="Capital Call" sap:VirtualizedContainerService.HintSize="496,696" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(amount\s*of\s*(.+)capital\s*call\s*(.+)\W\s*(.+))").Groups(4).Value.Trim]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22" />
                      </If.Else>
                    </If>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;on\s*or\s*before\s*\W*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_10" Language="CSharp">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDueDate]</OutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_11" Language="CSharp">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_9" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AppendLine>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
        </FlowDecision>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">230,348.4</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">230,374.79999999999995 100,374.79999999999995 100,1328.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Accolade Partner" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_3">
        <TryCatch.Try>
          <Sequence DisplayName="Accolade Partners" sap:VirtualizedContainerService.HintSize="496,676" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="AltairCode" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText, "(Accolade ID \WAID\W+\d+\s*Capital Call\s*(Payable)?:\s*(.+))").Groups(3).Value.Trim]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CapCallDueDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "capital\s*call\s*of\s+(.+)\s*due\s*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sept|nov|dec)(ember)?)\s*\d{1,2}\W?\s*\d{4}))").Groups(3).Value.Trim]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CapCallDueDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(CapCallDueDate).ToString("M/d/yyyy")]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_36">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CapCallDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}\W?\s*\d{4}))").Groups(1).Value.Trim]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CapCallDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(CapCallDate).ToString("M/d/yyyy")]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="AppendLine_4" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AppendLine>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowDecision x:Name="__ReferenceID11" Condition="[ManagerName.ToLower.Contains(&quot;Accolade&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2" True="{x:Reference __ReferenceID2}">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">530.6416666666667,267.7</av:Point>
          <av:Size x:Key="ShapeSize">79,87</av:Size>
          <av:PointCollection x:Key="TrueConnector">530.6416666666667,311.3 330,311.3 330,348.4</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">609.8416666666667,311.3 630.2416666666667,311.3 630.2416666666667,377.70000000000005 570.2416666666667,377.70000000000005 570.2416666666667,407.70000000000005</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.False>
        <FlowDecision x:Name="__ReferenceID14" Condition="[ManagerName.ToLower.Contains(&quot;Avenue&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">530.6416666666667,407.70000000000005</av:Point>
              <av:Size x:Key="ShapeSize">79,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">530.6416666666667,451.30000000000007 330,451.30000000000007 330,488.4000000000001</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">609.8416666666667,451.30000000000007 630.2416666666667,451.30000000000007 630.2416666666667,517.7 570.2416666666667,517.7 570.2416666666667,547.7</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">230,488.4000000000001</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">230,514.8000000000001 100,514.8000000000001 100,1328.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Avenue" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                <TryCatch.Try>
                  <Sequence DisplayName="Capital Call" sap:VirtualizedContainerService.HintSize="496,696" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(amount\s*due\W*(.+))").Groups(2).Value.Trim]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_35">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30" />
                      </If.Else>
                    </If>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;due\s*date\W*(.*)((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_8" Language="CSharp">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDueDate]</OutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;date\s*called\W*(.*)((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sept|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_9" Language="CSharp">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_10" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AppendLine>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowDecision x:Name="__ReferenceID18" Condition="[ManagerName.ToLower.Contains(&quot;Capital Dynamics&quot;.ToLower) Or ManagerName.ToLower.Contains(&quot;HRJ&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">530.6416666666667,547.7</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="FalseConnector">609.8416666666667,591.3000000000001 630,591.3000000000001 630,656.4 570,656.4 570,686.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.False>
                <FlowDecision x:Name="__ReferenceID5" Condition="[ManagerName.ToLower.Contains(&quot;Southwest Value Partners&quot;.ToLower) or ManagerName.ToLower.Contains(&quot;Covenant&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">530.4,686.4</av:Point>
                      <av:Size x:Key="ShapeSize">79,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">530.4,730 330,730 330,763.5999999999999</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">609.6,730 630,730 630,796.4 570,796.4 570,826.4</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">230,763.5999999999999</av:Point>
                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">230,789.9999999999999 100,789.9999999999999 100,1328.4</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="SWVP / Covenant" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                        <TryCatch.Try>
                          <Sequence DisplayName="SWVP" sap:VirtualizedContainerService.HintSize="496,696" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="AltairCode" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_30">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(amount\s*(called|of)\s*(\S+))").Groups(3).Value.Trim]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_31">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25" />
                              </If.Else>
                            </If>
                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;date\s*due\s*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_14" Language="CSharp">
                              <ui:InvokeCode.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDueDate]</OutArgument>
                              </ui:InvokeCode.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeCode>
                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_15" Language="CSharp">
                              <ui:InvokeCode.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
                              </ui:InvokeCode.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeCode>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_5" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AppendLine>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID0</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowDecision x:Name="__ReferenceID6" Condition="[ManagerName.ToLower.Contains(&quot;Deerpath&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">530.4,826.4</av:Point>
                          <av:Size x:Key="ShapeSize">79,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">530.4,870 340,870 340,913.5999999999999</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">609.6,870 630.2416666666667,870 630.2416666666667,937.7 570.2416666666667,937.7 570.2416666666667,967.7</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">240,913.5999999999999</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">240,939.9999999999999 100,939.9999999999999 100,1328.4</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Deerpath" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                            <TryCatch.Try>
                              <Sequence DisplayName="Deerpath" sap:VirtualizedContainerService.HintSize="496,491.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_20">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(your\s*portion\s*of\s*this\s*capital\s*call\s*is\s*(.+))").Groups(2).Value.Trim]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_21">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9" />
                                  </If.Else>
                                </If>
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;remit\s*the\s*funds\s*no\s*later\s*than\s*(.+)\s*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
                                  </ui:InvokeCode.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeCode>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_6" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:AppendLine>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowDecision x:Name="__ReferenceID19" Condition="[ManagerName.ToLower.Contains(&quot;Grubb&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">530.6416666666667,967.7</av:Point>
                              <av:Size x:Key="ShapeSize">79,87</av:Size>
                              <av:PointCollection x:Key="FalseConnector">609.8416666666667,1011.3000000000001 630,1011.3000000000001 630,1076.4 570,1076.4 570,1106.4</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID8" Condition="[ManagerName.ToLower.Contains(&quot;Impact Engine&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">530.4,1106.4</av:Point>
                                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">530.4,1150 340,1150 340,1193.6</av:PointCollection>
                                  <av:PointCollection x:Key="FalseConnector">609.6,1150 630.2416666666667,1150 630.2416666666667,1217.7 570.2416666666667,1217.7 570.2416666666667,1247.7</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">240,1193.6</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">240,1220 100,1220 100,1328.4</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Impact Engine" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Capital Call" sap:VirtualizedContainerService.HintSize="496,491.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_24">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(your\s*share\s*of\s*this\s*capital\s*call\s*(.+)\s*to\s*be\s*sent\s*promptly)").Groups(2).Value.Trim]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                        <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_3">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15" />
                                          </If.Else>
                                        </If>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;no\s*later\s*than\s*(.+)\s*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                                          <ui:InvokeCode.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
                                          </ui:InvokeCode.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeCode>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_7" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AppendLine>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowDecision x:Name="__ReferenceID17" Condition="[ManagerName.ToLower.Contains(&quot;Metropolitan&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <av:Point x:Key="ShapeLocation">530.6416666666667,1247.7</av:Point>
                                      <av:Size x:Key="ShapeSize">79,87</av:Size>
                                      <av:PointCollection x:Key="TrueConnector">530.6416666666667,1291.3 340,1291.3 340,1328.4</av:PointCollection>
                                      <av:PointCollection x:Key="FalseConnector">609.8416666666667,1291.3 630.2416666666667,1291.3 630.2416666666667,1357.7 570.2416666666667,1357.7 570.2416666666667,1387.7</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <FlowDecision.True>
                                    <FlowStep x:Name="__ReferenceID16">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">240,1328.4</av:Point>
                                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">240,1354.8000000000002 200,1354.8000000000002</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Metropolitan" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                        <TryCatch.Try>
                                          <Sequence DisplayName="Capital Call" sap:VirtualizedContainerService.HintSize="496,817.6" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="CapCallAmountLocal" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[CapCallAmountLocal]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(current\s*capital\s*call\s*(.+))").Groups(2).Value.Trim]</InArgument>
                                              </Assign.Value>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Split(CapCallAmountLocal,"\s{2,}").Reverse()(0)]</InArgument>
                                              </Assign.Value>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Assign>
                                            <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_10">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34" />
                                              </If.Else>
                                            </If>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;capital\s*call\s*due\s*by\s*(.+)\W*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_16" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDueDate]</OutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_17" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_11" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:AppendLine>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <FlowStep.Next>
                                        <x:Reference>__ReferenceID0</x:Reference>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowDecision.True>
                                  <FlowDecision.False>
                                    <x:Reference>__ReferenceID3</x:Reference>
                                  </FlowDecision.False>
                                </FlowDecision>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowDecision.False>
            </FlowDecision>
          </FlowDecision.False>
        </FlowDecision>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <FlowStep x:Name="__ReferenceID10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">230,208.39999999999998</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">230,234.79999999999998 100,234.79999999999998 100,1328.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Aberdeen" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_7">
        <TryCatch.Try>
          <Sequence DisplayName="Capital Call" sap:VirtualizedContainerService.HintSize="496,696" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ReadPdfText.ToLower, "(amount\s*due\s*from(.+)is\s*(.+))").Groups(3).Value.Trim]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <If Condition="[CapCallAmount.EndsWith(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[CapCallAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CapCallAmount.TrimEnd(".".ToCharArray)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19" />
              </If.Else>
            </If>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;on\s*or\s*before\s*\W*((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_12" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDueDate]</OutArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;try{&#xA;&#x9;&#xA;&#x9;Regex rx = new Regex(@&quot;((((jan|feb(r)?)(uary)?|ma(r(ch)?|y)|apr(il)?|ju(n|l)?(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s*\d{1,2}(st|nd|rd|th)?\W?\s*\d{4}))&quot;,RegexOptions.Compiled | RegexOptions.IgnoreCase);&#xA;&#x9;string matchedString = rx.Match(readPdftext.ToLower()).Groups[2].Value;&#xA;&#x9;&#xA;&#x9;if(matchedString.ToLower().Contains(&quot;1st&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;matchedString = matchedString.Replace(&quot;1st&quot;,&quot;1&quot;);&#xA;&#x9;}&#xA;&#x9;else if(matchedString.ToLower().Contains(&quot;nd&quot;) || matchedString.ToLower().Contains(&quot;rd&quot;) || matchedString.ToLower().Contains(&quot;th&quot;) )&#xA;&#x9;{&#xA;&#x9;&#x9;rx = new Regex(@&quot;(nd|rd|th)&quot;);&#xA;&#x9;&#x9;matchedString = rx.Replace(matchedString,&quot;&quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;distributionDate = Convert.ToDateTime(matchedString).ToString(&quot;M/d/yyyy&quot;);&#xA;}&#xA;catch(Exception e)&#xA;{&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="433.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_13" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="readPdftext">[ReadPdfText]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="distributionDate">[CapCallDate]</OutArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_8" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AppendLine>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowDecision x:Name="__ReferenceID20" Condition="[ManagerName.ToLower.Contains(&quot;Aberdeen&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_6" True="{x:Reference __ReferenceID10}" False="{x:Reference __ReferenceID11}">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">530.6416666666667,127.70000000000005</av:Point>
          <av:Size x:Key="ShapeSize">79,87</av:Size>
          <av:PointCollection x:Key="TrueConnector">530.6416666666667,171.30000000000004 330,171.30000000000004 330,208.39999999999998</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">609.8416666666667,171.30000000000004 630.2416666666667,171.30000000000004 630.2416666666667,237.7 570.2416666666667,237.7 570.2416666666667,267.7</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </FlowDecision>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <x:Reference>__ReferenceID18</x:Reference>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">230,628.4</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">210,674.8 100,674.8 100,1398.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="CapDyn/HRJ" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_11">
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_12" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AppendLine>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </FlowStep>
    <x:Reference>__ReferenceID19</x:Reference>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">240,1058.4</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">220,1004.8 140,1004.8 140,1158.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Grubb" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_12">
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:AppendLine File="{x:Null}" DisplayName="Append Line" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="AppendLine_13" Text="[&quot;[&quot;+DateTime.Now.ToString(&quot;HH:mm:ss&quot;)+&quot;] :: &quot;+ &quot;Error :- &quot;+ exception.Message +&quot;; While Data Extraction for - &quot; + TempFile.ToUpper]" UseDefaultEncoding="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AppendLine>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </FlowStep>
  </Flowchart>
</Activity>